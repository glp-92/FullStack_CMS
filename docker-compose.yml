services:

  # nginx:
  #   image: nginx:1.27.1-alpine
  #   restart: always
  #   container_name: nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   # user: 1000:1000
  #   volumes:
  #     - ./frontend/reverse-proxy/nginx.conf:/etc/nginx/nginx.conf
  #     - ./frontend/reverse-proxy/certs:/etc/nginx/certs # self signed certs
  #   depends_on:
  #     frontend:
  #       condition: service_started
  #   security_opt:
  #     - no-new-privileges:true
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '0.5'
  #         memory: 256M
  #       reservations:
  #         cpus: '0.25'
  #         memory: 128M
  #   networks:
  #     - public-subnet
  #     - private-subnet

  frontend:
    build: ./frontend/clientapp/
    read_only: true
    restart: always
    container_name: frontend
    user: 1000:1000
    ports:
    - "3000:3000"
    # depends_on:
    #   blog-service:
    #     condition: service_started
    #   file-service:
    #     condition: service_started
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    networks:
      - private-subnet

  backend:
    build: ./backend/api/
    read_only: true 
    restart: always
    container_name: backend
    ports:
    - "${API_PORT}:${API_PORT}"
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_BLOG_DB_NAME: ${MYSQL_BLOG_DB_NAME}
      MYSQL_BLOG_SERVICE_USER: ${MYSQL_BLOG_SERVICE_USER}
      MYSQL_BLOG_SERVICE_PASSWORD: ${MYSQL_BLOG_SERVICE_PASSWORD}
      MYSQL_BLOG_ADDR: ${MYSQL_BLOG_ADDR}
      API_PORT: ${API_PORT}
      JWT_ACCESS_TOKEN_EXPIRATION: ${JWT_ACCESS_TOKEN_EXPIRATION}
      JWT_REFRESH_TOKEN_EXPIRATION: ${JWT_REFRESH_TOKEN_EXPIRATION}
      JWT_SIGN_KEY: ${JWT_SIGN_KEY}
      FRONTEND_URL: ${FRONTEND_URL}
    user: 1000:1000
    security_opt:
      - no-new-privileges:true
    networks:
      - private-subnet
      - data-subnet

  mysql_svr:
    image: mysql:latest
    restart: always
    container_name: mysql_svr
    ports:
      - "4306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./backend/mysql/db:/var/lib/mysql
      - ./backend/mysql/.initdb:/docker-entrypoint-initdb.d
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u ${MYSQL_BLOG_DB_NAME} --password=${MYSQL_PASSWORD}
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 5
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2048M
        reservations:
          cpus: '0.5'
          memory: 1024M
    networks:
      - data-subnet

networks:
  public-subnet:
    driver: bridge
  private-subnet:
    driver: bridge
  data-subnet:
    driver: bridge